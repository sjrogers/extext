var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {available: a, history: b, current: c};
	});
var _user$project$Main$TxtFile = F2(
	function (a, b) {
		return {title: a, contents: b};
	});
var _user$project$Main$emptyTxtFile = A2(_user$project$Main$TxtFile, 'Welcome', 'Select a file.');
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'Populate') {
			if (_p0._0.ctor === 'Ok') {
				var updatedModel = _elm_lang$core$Native_Utils.update(
					model,
					{available: _p0._0._0});
				return {ctor: '_Tuple2', _0: updatedModel, _1: _elm_lang$core$Platform_Cmd$none};
			} else {
				var errorFile = A2(_user$project$Main$TxtFile, 'Error!', 'Could not load files.');
				var errorModel = _elm_lang$core$Native_Utils.update(
					model,
					{current: errorFile});
				return {ctor: '_Tuple2', _0: errorModel, _1: _elm_lang$core$Platform_Cmd$none};
			}
		} else {
			var fileModel = _elm_lang$core$Native_Utils.update(
				model,
				{current: _p0._0});
			return {ctor: '_Tuple2', _0: fileModel, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$Display = function (a) {
	return {ctor: 'Display', _0: a};
};
var _user$project$Main$contentsList = function (files) {
	var fileEntry = function (f) {
		return A2(
			_elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: A2(_elm_lang$html$Html_Attributes$attribute, 'class', 'btn'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Main$Display(f)),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(f.title),
				_1: {ctor: '[]'}
			});
	};
	var fileLi = function (f) {
		return A2(
			_elm_lang$html$Html$li,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: fileEntry(f),
				_1: {ctor: '[]'}
			});
	};
	return A2(_elm_lang$core$List$map, fileLi, files);
};
var _user$project$Main$view = function (model) {
	var txtFileContentsDiv = A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(model.current.contents),
			_1: {ctor: '[]'}
		});
	var header = A2(
		_elm_lang$html$Html$h2,
		{
			ctor: '::',
			_0: A2(_elm_lang$html$Html_Attributes$attribute, 'class', 'text-right'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(model.current.title),
			_1: {ctor: '[]'}
		});
	var displayContainer = A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: A2(_elm_lang$html$Html_Attributes$attribute, 'class', 'col-md-8 pull-right'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: header,
			_1: {
				ctor: '::',
				_0: txtFileContentsDiv,
				_1: {ctor: '[]'}
			}
		});
	var tableOfContents = A2(
		_elm_lang$html$Html$ul,
		{
			ctor: '::',
			_0: A2(_elm_lang$html$Html_Attributes$attribute, 'class', 'list-unstyled'),
			_1: {ctor: '[]'}
		},
		_user$project$Main$contentsList(model.available));
	var tableOfContentsDiv = A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: A2(_elm_lang$html$Html_Attributes$attribute, 'class', 'col-md-4'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: tableOfContents,
			_1: {ctor: '[]'}
		});
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: A2(_elm_lang$html$Html_Attributes$attribute, 'class', 'row'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: tableOfContentsDiv,
			_1: {
				ctor: '::',
				_0: displayContainer,
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$Populate = function (a) {
	return {ctor: 'Populate', _0: a};
};
var _user$project$Main$loadFiles = function () {
	var txtFileDecoder = A3(
		_elm_lang$core$Json_Decode$map2,
		_user$project$Main$TxtFile,
		A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string),
		A2(_elm_lang$core$Json_Decode$field, 'contents', _elm_lang$core$Json_Decode$string));
	var result = A2(
		_elm_lang$http$Http$get,
		'/files',
		_elm_lang$core$Json_Decode$list(txtFileDecoder));
	return A2(_elm_lang$http$Http$send, _user$project$Main$Populate, result);
}();
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A3(
		_user$project$Main$Model,
		{ctor: '[]'},
		{ctor: '[]'},
		_user$project$Main$emptyTxtFile),
	_1: _user$project$Main$loadFiles
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init,
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: _elm_lang$core$Basics$always(_elm_lang$core$Platform_Sub$none)
	})();
